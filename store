<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MozazionStore</title>
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <style>
        /* Reset and Base Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #121212;
            color: #e0e0e0;
            overflow-x: hidden;
            padding-top: 60px; /* Space for fixed header */
        }
        
        /* Device Check */
        .device-check {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: #121212;
            z-index: 99999;
            justify-content: center;
            align-items: center;
            text-align: center;
            padding: 20px;
            color: #e0e0e0;
        }
        
        /* Loading Animation Styles */
        #loading-container, #invoice-loading {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #121212;
            z-index: 9999;
            transition: opacity 0.5s ease-out;
        }

        #invoice-loading {
            display: none;
            z-index: 1002;
            background-color: rgba(0, 0, 0, 0.8);
        }

        /* Pyramid Loader Animation */
        .pyramid-loader {
          position: relative;
          width: 300px;
          height: 300px;
          display: block;
          transform-style: preserve-3d;
          transform: rotateX(-20deg);
        }

        .wrapper {
          position: relative;
          width: 100%;
          height: 100%;
          transform-style: preserve-3d;
          animation: spin 4s linear infinite;
        }

        @keyframes spin {
          100% {
            transform: rotateY(360deg);
          }
        }

        .pyramid-loader .wrapper .side {
          width: 70px;
          height: 70px;
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          margin: auto;
          transform-origin: center top;
          clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
        }

        .pyramid-loader .wrapper .side1 {
          transform: rotateZ(-30deg) rotateY(90deg);
          background: conic-gradient(#e0115f, #ff6f61, #e0115f);
        }

        .pyramid-loader .wrapper .side2 {
          transform: rotateZ(30deg) rotateY(90deg);
          background: conic-gradient(#ff6f61, #e0115f, #ff6f61);
        }

        .pyramid-loader .wrapper .side3 {
          transform: rotateX(30deg);
          background: conic-gradient(#e0115f, #ff6f61, #e0115f);
        }

        .pyramid-loader .wrapper .side4 {
          transform: rotateX(-30deg);
          background: conic-gradient(#ff6f61, #e0115f, #ff6f61);
        }

        .pyramid-loader .wrapper .shadow {
          width: 60px;
          height: 60px;
          background: #ff6f61;
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          margin: auto;
          transform: rotateX(90deg) translateZ(-40px);
          filter: blur(12px);
        }

        /* Header Styles */
        .header {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: #121212;
            z-index: 100;
            padding: 10px 15px;
            border-bottom: 1px solid #333;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .store-title-wrapper {
            display: flex;
            justify-content: flex-start;
        }

        .store-title {
            padding: 6px 20px;
            color: #fff;
            background: linear-gradient(to right, #9f9f9f 0, #fff 10%, #868686 20%);
            background-position: 0;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: shine 3s infinite linear;
            animation-fill-mode: forwards;
            -webkit-text-size-adjust: none;
            font-weight: 600;
            font-size: 1rem;
            text-decoration: none;
            white-space: nowrap;
        }

        @keyframes shine {
            0% {
                background-position: 0;
            }
            60% {
                background-position: 180px;
            }
            100% {
                background-position: 180px;
            }
        }
        
        /* Cart Button in Header */
        .cart-btn {
            position: relative;
            background: none;
            border: none;
            color: #e0e0e0;
            font-size: 1.5rem;
            cursor: pointer;
            padding: 5px 10px;
            border-radius: 50%;
            transition: background-color 0.2s;
        }
        
        .cart-btn:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        
        .cart-count {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: #800020;
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 0.7rem;
            font-weight: bold;
        }
        
        /* Main Content Styles */
        .content {
            display: none; /* Hidden until loading is complete */
            max-width: 100%;
            margin: 0 auto;
            padding: 0 15px;
        }
        
        .banner-container {
            width: 100%;
            margin: 10px 0;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
            aspect-ratio: 1200/480;
        }
        
        .banner-container img {
            width: 100%;
            height: 100%;
            display: block;
            object-fit: cover;
        }
        
        /* Search Box */
        .search {
            --input-line: #cccccc;
            --input-text-color: #808080;
            --input-text-hover-color: transparent;
            --input-border-color: #808080;
            --input-border-hover-color: #999999;
            --input-bg-color: #333333;
            --search-max-width: 600px;
            --search-min-width: 150px;
            --border-radius: 5px;
            --transition-cubic-bezier: 150ms cubic-bezier(0.4,0,0.2,1);
        }

        .search-container {
            width: 100%;
            max-width: 600px;
            margin: 15px auto;
            padding: 0 15px;
        }

        .search-box {
            max-width: var(--search-max-width);
            min-width: var(--search-min-width);
            height: 35px;
            border: 1px solid var(--input-border-color);
            border-radius: var(--border-radius);
            padding: 5px 15px;
            background: var(--input-bg-color);
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
            transition: var(--transition-cubic-bezier);
        }

        .search-box:hover {
            border-color: var(--input-border-hover-color);
        }

        /*Section input*/
        .search-field {
            position: relative;
            width: 100%;
            height: 100%;
            left: -5px;
            border: 0;
        }

        .search-input {
            width: calc(100% - 29px);
            height: 100%;
            border: 0;
            border-color: transparent;
            font-size: 1rem;
            padding-right: 0px;
            color: var(--input-line);
            background: var(--input-bg-color);
            border-right: 2px solid var(--input-border-color);
            outline: none;
        }

        .search-input::-webkit-input-placeholder {
            color: var(--input-text-color);
        }

        .search-input::-moz-input-placeholder {
            color: var(--input-text-color);
        }

        .search-input::-ms-input-placeholder {
            color: var(--input-text-color);
        }

        .search-input:focus::-webkit-input-placeholder {
            color: var(--input-text-hover-color);
        }

        .search-input:focus::-moz-input-placeholder {
            color: var(--input-text-hover-color);
        }

        .search-input:focus::-ms-input-placeholder {
            color: var(--input-text-hover-color);
        }

        /*Search button*/
        .search-box-icon {
            width: 52px;
            height: 35px;
            position: absolute;
            top: -6px;
            right: -21px;
            background: transparent;
            border-bottom-right-radius: var(--border-radius);
            border-top-right-radius: var(--border-radius);
            transition: var(--transition-cubic-bezier);
        }

        .search-box-icon:hover {
            background: var(--input-border-color);
        }

        .btn-icon-content {
            width: 52px;
            height: 35px;
            top: -6px;
            right: -21px;
            background: transparent;
            border: none;
            cursor: pointer;
            border-bottom-right-radius: var(--border-radius);
            border-top-right-radius: var(--border-radius);
            transition: var(--transition-cubic-bezier);
            opacity: .4;
        }

        .btn-icon-content:hover {
            opacity: .8;
        }

        .search-icon {
            width: 21px;
            height: 21px;
            position: absolute;
            top: 7px;
            right: 15px;
        }
        
        /* Improved Product Cards */
        .products-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
            gap: 15px;
            margin-bottom: 30px;
        }
        
        .card {
            --card-bg: #1e1e1e;
            --card-accent: #800020;
            --card-text: #e0e0e0;
            --card-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);

            width: 100%;
            height: 280px;
            background: var(--card-bg);
            border-radius: 10px;
            position: relative;
            overflow: hidden;
            transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
            box-shadow: var(--card-shadow);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .card__content {
            padding: 12px;
            height: 100%;
            display: flex;
            flex-direction: column;
            gap: 8px;
            position: relative;
            z-index: 2;
        }

        .card__badge {
            position: absolute;
            top: 0;
            right: 0;
            background: #10b981;
            color: white;
            padding: 0.3em 0.6em;
            border-radius: 0 10px 0 10px;
            font-size: 0.7em;
            font-weight: 600;
            opacity: 0;
            transform: translateY(-10px);
            transition: all 0.3s ease;
            z-index: 3;
        }

        .card__image {
            width: 100%;
            height: 100px;
            background: linear-gradient(45deg, #b3002d, #800020);
            border-radius: 6px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .card__text {
            display: flex;
            flex-direction: column;
            gap: 6px;
            flex-grow: 1;
        }

        .card__title {
            color: var(--card-text);
            font-size: 0.95rem;
            margin: 0;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .card__description {
            color: var(--card-text);
            font-size: 0.75rem;
            margin: 0;
            opacity: 0.7;
            line-height: 1.4;
            transition: all 0.3s ease;
        }

        .card__footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: auto;
            padding-top: 8px;
        }

        .card__price {
            color: var(--card-text);
            font-weight: 700;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .card__button {
            width: 30px;
            height: 30px;
            background: var(--card-accent);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        /* Hover Effects */
        .card:hover {
            transform: translateY(-5px);
            box-shadow:
                0 10px 15px -3px rgba(0, 0, 0, 0.2),
                0 4px 6px -2px rgba(0, 0, 0, 0.1);
            border-color: rgba(128, 0, 32, 0.3);
        }

        .card:hover .card__badge {
            opacity: 1;
            transform: translateY(0);
        }

        .card:hover .card__image {
            transform: translateY(-5px) scale(1.03);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.2);
        }

        .card:hover .card__title {
            color: var(--card-accent);
            transform: translateX(2px);
        }

        .card:hover .card__description {
            opacity: 1;
            transform: translateX(2px);
        }

        .card:hover .card__price {
            color: var(--card-accent);
            transform: translateX(2px);
        }

        .card:hover .card__button {
            transform: scale(1.1);
            box-shadow: 0 0 0 4px rgba(128, 0, 32, 0.3);
        }

        .no-products {
            grid-column: 1 / -1;
            text-align: center;
            padding: 20px;
            color: #999;
            font-size: 1.1rem;
        }

        /* Footer Styles */
        .footer {
            text-align: center;
            padding: 20px;
            color: #666;
            font-size: 0.9rem;
            border-top: 1px solid #333;
            margin-top: 30px;
        }

        .copyright {
            padding: 6px 0 6px 5px;
            color: #fff;
            background: linear-gradient(to right, #9f9f9f 0, #fff 10%, #868686 20%);
            background-position: 0;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            animation: shine 3s infinite linear;
            animation-fill-mode: forwards;
            -webkit-text-size-adjust: none;
            font-weight: 600;
            text-decoration: none;
            white-space: nowrap;
            display: inline;
        }
        
        /* Cart Overlay */
        .cart-overlay {
            position: fixed;
            bottom: -100%;
            left: 0;
            width: 100%;
            max-height: 60%;
            background-color: #1e1e1e;
            z-index: 1000;
            border-radius: 20px 20px 0 0;
            box-shadow: 0 -5px 20px rgba(0, 0, 0, 0.3);
            transition: bottom 0.3s ease-out;
            padding: 20px;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .cart-overlay.show {
            bottom: 0;
        }

        .cart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid #333;
        }

        .cart-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: #e0e0e0;
        }

        .close-cart {
            background: none;
            border: none;
            color: #999;
            font-size: 1.5rem;
            cursor: pointer;
        }

        .cart-products {
            flex-grow: 1;
            overflow-y: auto;
            margin-bottom: 15px;
            max-height: 200px;
        }

        .cart-product {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #333;
        }

        .product-info {
            display: flex;
            align-items: center;
            gap: 10px;
            flex-grow: 1;
        }

        .product-image {
            width: 50px;
            height: 50px;
            background: linear-gradient(45deg, #b3002d, #800020);
            border-radius: 6px;
        }

        .product-details {
            flex-grow: 1;
        }

        .product-name {
            font-weight: 600;
            color: #e0e0e0;
            margin-bottom: 5px;
            font-size: 0.9rem;
        }

        .product-price {
            font-size: 0.8rem;
            color: #999;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .quantity-btn {
            width: 25px;
            height: 25px;
            background: #333;
            border: none;
            border-radius: 50%;
            color: #e0e0e0;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 0.8rem;
        }

        .quantity {
            font-weight: 600;
            min-width: 20px;
            text-align: center;
            font-size: 0.9rem;
        }

        .remove-btn {
            background: none;
            border: none;
            color: #d65563;
            cursor: pointer;
            margin-left: 10px;
            font-size: 1rem;
        }

        .coupon-section {
            margin-bottom: 15px;
        }

        .coupon-form {
            display: flex;
            gap: 10px;
        }

        .coupon-input {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #333;
            border-radius: 6px;
            background-color: #2d2d2d;
            color: #e0e0e0;
            font-size: 0.9rem;
        }

        .apply-btn {
            padding: 0 15px;
            background: #800020;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
        }

        .checkout-summary {
            border-top: 1px solid #333;
            padding-top: 15px;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            font-size: 0.9rem;
        }

        .summary-label {
            color: #999;
        }

        .summary-value {
            font-weight: 600;
        }

        .total-row {
            font-size: 1rem;
            margin-top: 10px;
            padding-top: 10px;
            border-top: 1px solid #333;
        }

        .checkout-btn {
            width: 100%;
            padding: 12px;
            background: #800020;
            color: white;
            border: none;
            border-radius: 6px;
            font-weight: 600;
            margin-top: 15px;
            cursor: pointer;
            font-size: 1rem;
        }
        
        /* Order Form Overlay */
        .order-form-overlay {
            position: fixed;
            bottom: -100%;
            left: 0;
            width: 100%;
            max-height: 80%;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: flex-end;
            z-index: 1001;
            padding: 0;
            transition: all 0.3s ease-out;
            opacity: 0;
        }
        
        .order-form-overlay.show {
            bottom: 0;
            opacity: 1;
        }
        
        .order-form {
            background-color: #1e1e1e;
            width: 100%;
            max-width: 100%;
            padding: 20px;
            border-radius: 20px 20px 0 0;
            box-shadow: 0 -5px 20px rgba(0, 0, 0, 0.3);
            transform: translateY(20px);
            transition: all 0.3s ease-out;
            position: relative;
            border: 1px solid #333;
            max-height: 80vh;
            overflow-y: auto;
        }
        
        .order-form.show {
            transform: translateY(0);
        }
        
        .order-form h2 {
            margin-top: 0;
            color: #800020;
            text-align: center;
            font-size: 1.3rem;
            margin-bottom: 15px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 6px;
            font-weight: 600;
            color: #ccc;
            font-size: 0.85rem;
        }
        
        .form-group input, 
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 10px 12px;
            border: 1px solid #333;
            border-radius: 6px;
            font-size: 14px;
            transition: border-color 0.3s;
            background-color: #2d2d2d;
            color: #e0e0e0;
        }
        
        .form-group input:focus, 
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #800020;
            box-shadow: 0 0 0 2px rgba(128, 0, 32, 0.2);
        }
        
        .form-group .readonly-input {
            background-color: #252525;
            color: #999;
            border-color: #333;
        }
        
        .form-row {
            display: flex;
            gap: 10px;
        }
        
        .form-row .form-group {
            flex: 1;
        }
        
        .order-summary {
            background-color: #252525;
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 15px;
        }
        
        .order-summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 5px;
            font-size: 0.9rem;
        }
        
        .submit-btn {
            background-color: #800020;
            color: white;
            border: none;
            padding: 12px;
            border-radius: 6px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            width: 100%;
            transition: background-color 0.3s;
            margin-top: 10px;
        }
        
        .submit-btn:hover {
            background-color: #990025;
        }
        
        .close-btn {
            position: absolute;
            top: 12px;
            right: 12px;
            background: none;
            border: none;
            font-size: 22px;
            cursor: pointer;
            color: #999;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            transition: background-color 0.2s;
        }
        
        .close-btn:hover {
            background-color: #333;
        }
        
        /* Invoice Styles */
        .invoice-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1002;
            padding: 15px;
        }
        
        .invoice-overlay.show {
            display: flex;
        }
        
        .invoice-container {
            background-color: #1e1e1e;
            width: 100%;
            max-width: 400px;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.3);
            border: 1px solid #800020;
            color: #e0e0e0;
            position: relative;
        }
        
        .invoice-header {
            text-align: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #800020;
        }
        
        .invoice-title {
            font-size: 1.5rem;
            color: #800020;
            margin-bottom: 5px;
        }
        
        .invoice-subtitle {
            font-size: 1rem;
            color: #ccc;
        }
        
        .qr-code {
            width: 150px;
            height: 150px;
            margin: 0 auto 15px;
            background-color: white;
            padding: 10px;
            border-radius: 8px;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .qr-code img {
            max-width: 100%;
            max-height: 100%;
        }
        
        .invoice-section {
            margin-bottom: 15px;
            border-bottom: 1px dashed #333;
            padding-bottom: 15px;
        }
        
        .invoice-section-title {
            font-size: 1rem;
            color: #800020;
            margin-bottom: 10px;
        }
        
        .invoice-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
        }
        
        .invoice-label {
            color: #999;
        }
        
        .invoice-value {
            font-weight: 600;
        }
        
        .invoice-total {
            font-size: 1.1rem;
            font-weight: bold;
            margin-top: 15px;
            padding-top: 10px;
            border-top: 1px solid #800020;
        }
        
        .invoice-footer {
            text-align: center;
            margin-top: 20px;
            color: #999;
            font-size: 0.8rem;
        }
        
        .invoice-note {
            text-align: center;
            margin-top: 15px;
            padding: 10px;
            background-color: rgba(128, 0, 32, 0.1);
            border-radius: 6px;
            font-size: 0.9rem;
        }
        
        .invoice-actions {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-top: 20px;
        }
        
        .invoice-btn {
            padding: 10px 15px;
            border: none;
            border-radius: 6px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .invoice-download {
            background-color: #800020;
            color: white;
        }
        
        .invoice-download:hover {
            background-color: #990025;
        }
        
        .invoice-close {
            background-color: #333;
            color: white;
        }
        
        .invoice-close:hover {
            background-color: #444;
        }
        
        /* Alert Styles */
        .alert-container {
            position: fixed;
            top: 70px;
            right: 20px;
            z-index: 1100;
            display: flex;
            flex-direction: column;
            gap: 10px;
            max-height: 200px;
            overflow: hidden;
        }
        
        .alert {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 280px;
            padding: 12px 16px;
            border-radius: 8px;
            background-color: #232531;
            color: white;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
            transform: translateX(100%);
            opacity: 0;
            transition: all 0.3s ease;
            border: 1px solid #333;
        }
        
        .alert.show {
            transform: translateX(0);
            opacity: 1;
        }
        
        .alert.error {
            background-color: #232531;
        }
        
        .alert.success {
            background-color: #1a3a2e;
        }
        
        .alert-content {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .alert-icon {
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
        }
        
        .alert.error .alert-icon {
            background-color: rgba(214, 85, 99, 0.1);
            color: #d65563;
        }
        
        .alert.success .alert-icon {
            background-color: rgba(16, 185, 129, 0.1);
            color: #10b981;
        }
        
        .alert-text {
            display: flex;
            flex-direction: column;
        }
        
        .alert-title {
            font-weight: 600;
            font-size: 13px;
            margin-bottom: 2px;
        }
        
        .alert-message {
            font-size: 12px;
            color: #9ca3af;
        }
        
        .alert-close {
            background: none;
            border: none;
            color: #9ca3af;
            cursor: pointer;
            padding: 4px;
            border-radius: 4px;
            transition: background-color 0.2s;
        }
        
        .alert-close:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        
        @media (max-width: 768px) {
            .products-container {
                grid-template-columns: repeat(2, 1fr);
            }
            
            .order-form {
                padding: 20px;
            }
            
            .form-row {
                flex-direction: column;
                gap: 10px;
            }
            
            .alert {
                width: 260px;
            }

            .cart-overlay {
                max-height: 70%;
            }
            
            .order-form-overlay {
                max-height: 85%;
            }
            
            .invoice-container {
                padding: 20px;
            }
        }

        @media (min-width: 768px) {
            .device-check {
                display: flex;
            }
            .content, #loading-container {
                display: none !important;
            }
        }

        @media (max-width: 480px) {
            .store-title {
                font-size: 0.9rem;
                padding: 6px 15px;
            }
            
            .search-input {
                padding: 10px 45px 10px 15px;
                font-size: 14px;
            }
            
            .card {
                height: 260px;
            }
            
            .card__image {
                height: 90px;
            }
            
            .card__title {
                font-size: 0.9rem;
            }
            
            .card__description {
                font-size: 0.7rem;
            }

            .copyright {
                font-size: 0.8rem;
            }
            
            .cart-overlay {
                max-height: 75%;
            }
            
            .order-form-overlay {
                max-height: 90%;
            }
            
            .invoice-title {
                font-size: 1.3rem;
            }
            
            .invoice-subtitle {
                font-size: 0.9rem;
            }
            
            .invoice-actions {
                flex-direction: column;
            }
            
            .invoice-btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <!-- Device Check -->
    <div class="device-check">
        <div>
            <h2>Perangkat Tidak Didukung</h2>
            <p>Maaf, MozazionStore hanya dapat diakses melalui perangkat mobile. Silakan buka website ini menggunakan smartphone atau tablet Anda.</p>
        </div>
    </div>

    <!-- Loading Animation -->
    <div id="loading-container">
        <div class="pyramid-loader">
          <div class="wrapper">
            <span class="side side1"></span>
            <span class="side side2"></span>
            <span class="side side3"></span>
            <span class="side side4"></span>
            <span class="shadow"></span>
          </div>
        </div>
    </div>
    
    <!-- Invoice Loading Animation -->
    <div id="invoice-loading">
        <div class="pyramid-loader">
          <div class="wrapper">
            <span class="side side1"></span>
            <span class="side side2"></span>
            <span class="side side3"></span>
            <span class="side side4"></span>
            <span class="shadow"></span>
          </div>
        </div>
    </div>
    
    <!-- Fixed Header -->
    <header class="header">
        <div class="store-title-wrapper">
            <h1 class="store-title">MozazionStore</h1>
        </div>
        <button class="cart-btn" onclick="showCart()">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <circle cx="9" cy="21" r="1"></circle>
                <circle cx="20" cy="21" r="1"></circle>
                <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
            </svg>
            <span class="cart-count" id="cartCount">0</span>
        </button>
    </header>
    
    <!-- Main Content -->
    <div class="content">
        <div class="banner-container">
            <img src="image1.jpg" alt="Banner MozazionStore">
        </div>
        
        <div class="search-container">
            <div class="search">
                <div class="search-box">
                    <div class="search-field">
                        <input type="text" class="search-input" placeholder="Cari produk..." id="searchInput">
                        <div class="search-box-icon">
                            <button class="btn-icon-content">
                                <i class="search-icon">
                                    <svg xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 512 512"><path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z" fill="#fff"></path></svg>
                                </i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="products-container" id="productsContainer">
            <!-- Product cards will be generated by JavaScript -->
        </div>

        <!-- Footer -->
        <footer class="footer">
            <p>Powered by<span class="copyright">MozazionStore</span></p>
        </footer>
    </div>
    
    <!-- Cart Overlay -->
    <div class="cart-overlay" id="cartOverlay">
        <div class="cart-header">
            <h2 class="cart-title">Keranjang Belanja</h2>
            <button class="close-cart" onclick="hideCart()">×</button>
        </div>
        
        <div class="cart-products" id="cartProducts">
            <!-- Cart items will be added here -->
        </div>
        
        <div class="coupon-section">
            <div class="coupon-form">
                <input type="text" class="coupon-input" placeholder="Masukkan kode voucher" id="cartVoucher">
                <button class="apply-btn" onclick="applyCartVoucher()">Terapkan</button>
            </div>
        </div>
        
        <div class="checkout-summary">
            <div class="summary-row">
                <span class="summary-label">Subtotal:</span>
                <span class="summary-value" id="cartSubtotal">Rp0</span>
            </div>
            <div class="summary-row">
                <span class="summary-label">Diskon:</span>
                <span class="summary-value" id="cartDiscount">Rp0</span>
            </div>
            <div class="summary-row total-row">
                <span class="summary-label">Total:</span>
                <span class="summary-value" id="cartTotal">Rp0</span>
            </div>
        </div>
        
        <button class="checkout-btn" onclick="proceedToCheckout()">Lanjutkan Pembayaran</button>
    </div>
    
    <!-- Order Form Overlay -->
    <div class="order-form-overlay" id="orderFormOverlay">
        <div class="order-form" id="orderForm">
            <button class="close-btn" onclick="hideOrderForm()">×</button>
            <h2>Formulir Pemesanan</h2>
            
            <div class="order-summary" id="orderSummary">
                <!-- Order summary will be added here -->
            </div>
            
            <form id="orderFormElement">
                <div class="form-row">
                    <div class="form-group">
                        <label for="name">Nama Lengkap</label>
                        <input type="text" id="name" name="name" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="username">Username Telegram</label>
                        <input type="text" id="username" name="username" required placeholder="@username">
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="device">Perangkat</label>
                    <select id="device" name="device" required>
                        <option value="">Pilih perangkat</option>
                        <option value="PC">PC</option>
                        <option value="Mobile">Mobile</option>
                        <option value="Console">Console</option>
                        <option value="Lainnya">Lainnya</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="location">Lokasi</label>
                    <input type="text" id="location" name="location" required>
                </div>
                
                <button type="submit" class="submit-btn">Buat Pesanan</button>
            </form>
        </div>
    </div>
    
    <!-- Invoice Overlay -->
    <div class="invoice-overlay" id="invoiceOverlay">
        <div class="invoice-container" id="invoiceContainer">
            <div class="invoice-header">
                <h2 class="invoice-title">MozazionStore</h2>
                <p class="invoice-subtitle">Invoice Pembelian</p>
            </div>
            
            <div class="qr-code">
                <img src="https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=MozazionStore" alt="QR Code">
            </div>
            
            <div class="invoice-section">
                <h3 class="invoice-section-title">Detail Transaksi</h3>
                <div class="invoice-item">
                    <span class="invoice-label">Produk</span>
                    <span class="invoice-value" id="invoiceProduct">-</span>
                </div>
                <div class="invoice-item">
                    <span class="invoice-label">Durasi</span>
                    <span class="invoice-value" id="invoiceDuration">-</span>
                </div>
                <div class="invoice-item">
                    <span class="invoice-label">Harga</span>
                    <span class="invoice-value" id="invoicePrice">Rp0</span>
                </div>
                <div class="invoice-item">
                    <span class="invoice-label">Jumlah</span>
                    <span class="invoice-value" id="invoiceQuantity">-</span>
                </div>
                <div class="invoice-item invoice-total">
                    <span class="invoice-label">Total</span>
                    <span class="invoice-value" id="invoiceTotal">Rp0</span>
                </div>
            </div>
            
            <div class="invoice-section">
                <h3 class="invoice-section-title">Informasi Transaksi</h3>
                <div class="invoice-item">
                    <span class="invoice-label">ID Transaksi</span>
                    <span class="invoice-value" id="invoiceTransactionId">-</span>
                </div>
                <div class="invoice-item">
                    <span class="invoice-label">Tanggal</span>
                    <span class="invoice-value" id="invoiceDate">-</span>
                </div>
                <div class="invoice-item">
                    <span class="invoice-label">Metode Pembayaran</span>
                    <span class="invoice-value">QRIS</span>
                </div>
            </div>
            
            <div class="invoice-note">
                <p>Admin akan segera menghubungi Anda untuk menyelesaikan pesanan</p>
            </div>
            
            <div class="invoice-actions">
                <button class="invoice-btn invoice-download" onclick="downloadInvoice()">Download Invoice</button>
                <button class="invoice-btn invoice-close" onclick="hideInvoice()">Tutup</button>
            </div>
            
            <div class="invoice-footer">
                <p>Terima kasih telah berbelanja di MozazionStore</p>
            </div>
        </div>
    </div>
    
    <!-- Alert Container -->
    <div class="alert-container" id="alertContainer"></div>
    
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script>
        // Initialize AOS animation library
        AOS.init({
            duration: 800,
            easing: 'ease-in-out',
            once: true
        });

        // Product data
        const products = [
            {
                id: 1,
                title: "Capcut 1 Bulan Private",
                description: "Akun Capcut Premium Private untuk 1 bulan dengan semua fitur terbaik.",
                price: 120000,
                badge: "BARU",
                bgColor: "#b3002d",
                duration: "1 Bulan"
            },
            {
                id: 2,
                title: "Capcut 1 Bulan Sharing",
                description: "Akun Capcut Premium Sharing untuk 1 bulan dengan semua fitur terbaik.",
                price: 80000,
                badge: "TERBAIK",
                bgColor: "#990025",
                duration: "1 Bulan"
            },
            {
                id: 3,
                title: "Capcut 7 Hari Private",
                description: "Akun Capcut Premium Private untuk 7 hari dengan semua fitur terbaik.",
                price: 50000,
                badge: "DISKON",
                bgColor: "#800020",
                duration: "7 Hari"
            },
            {
                id: 4,
                title: "Canva Member 1 Bulan",
                description: "Akun Canva Pro Member untuk 1 bulan dengan semua fitur premium.",
                price: 150000,
                badge: "POPULER",
                bgColor: "#73001C",
                duration: "1 Bulan"
            },
            {
                id: 5,
                title: "Alightmotion 1 Tahun Private",
                description: "Akun Alightmotion Pro Private untuk 1 tahun penuh.",
                price: 300000,
                badge: "TERBATAS",
                bgColor: "#5B0018",
                duration: "1 Tahun"
            },
            {
                id: 6,
                title: "Disney 1 Bulan 6U",
                description: "Akun Disney+ Premium untuk 1 bulan dengan kualitas 6U.",
                price: 75000,
                badge: "BARU",
                bgColor: "#4D0019",
                duration: "1 Bulan"
            }
        ];

        // Cart functionality
        let cart = [];
        let appliedVoucher = null;
        const voucherDiscounts = {
            'MOZAZION10': 0.1, // 10% discount
            'MOZAZION20': 0.2  // 20% discount
        };

        // Telegram bot configuration
        const telegramBotToken = '7628478347:AAEBZsF_GejqNyFG1TC9sUPAgHbFCIkAl-I';
        const telegramChatId = '7651717623';

        // Format price to Indonesian Rupiah
        function formatPrice(price) {
            return 'Rp' + price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        // Generate random transaction ID
        function generateTransactionId() {
            const prefix = 'MOZATRX';
            const randomNum1 = Math.floor(1000 + Math.random() * 9000);
            const randomNum2 = Math.floor(1000 + Math.random() * 9000);
            return `${prefix}${randomNum1}${randomNum2}`;
        }

        // Generate random reference number
        function generateReferenceNumber() {
            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
            let result = '';
            for (let i = 0; i < 10; i++) {
                result += chars.charAt(Math.floor(Math.random() * chars.length));
            }
            return result;
        }

        // Format current date
        function formatDate() {
            const now = new Date();
            const day = String(now.getDate()).padStart(2, '0');
            const month = String(now.getMonth() + 1).padStart(2, '0');
            const year = now.getFullYear();
            const hours = String(now.getHours()).padStart(2, '0');
            const minutes = String(now.getMinutes()).padStart(2, '0');
            return `${day}/${month}/${year} ${hours}:${minutes}`;
        }

        // Device check
        function isMobileDevice() {
            return (typeof window.orientation !== "undefined") || (navigator.userAgent.indexOf('IEMobile') !== -1);
        }
        
        if (!isMobileDevice() && window.innerWidth >= 768) {
            document.querySelector('.device-check').style.display = 'flex';
        } else {
            // Wait for 5 seconds then hide loading and show content
            setTimeout(function() {
                document.getElementById('loading-container').style.opacity = '0';
                
                // After fade out transition completes, hide loading and show content
                setTimeout(function() {
                    document.getElementById('loading-container').style.display = 'none';
                    document.querySelector('.content').style.display = 'block';
                    renderProducts(products); // Render all products initially
                }, 500); // Match this with the CSS transition time
            }, 5000); // 5 seconds
        }

        // Update cart count in header
        function updateCartCount() {
            const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
            document.getElementById('cartCount').textContent = totalItems;
            
            // Show/hide badge based on items
            const cartBadge = document.getElementById('cartCount');
            if (totalItems > 0) {
                cartBadge.style.display = 'flex';
            } else {
                cartBadge.style.display = 'none';
            }
        }

        // Render products function
        function renderProducts(productsToRender) {
            const productsContainer = document.getElementById('productsContainer');
            productsContainer.innerHTML = '';

            if (productsToRender.length === 0) {
                productsContainer.innerHTML = '<div class="no-products">Maaf produk yang Anda cari nampaknya tidak ada</div>';
                return;
            }

            productsToRender.forEach((product, index) => {
                const productCard = document.createElement('div');
                productCard.className = 'card';
                productCard.setAttribute('data-aos', 'fade-up');
                productCard.setAttribute('data-aos-delay', index * 100);
                productCard.innerHTML = `
                    <div class="card__content">
                        <div class="card__badge">${product.badge}</div>
                        <div style="--bg-color: ${product.bgColor}" class="card__image"></div>
                        <div class="card__text">
                            <p class="card__title">${product.title}</p>
                            <p class="card__description">${product.description}</p>
                        </div>
                        <div class="card__footer">
                            <div class="card__price">${formatPrice(product.price)}</div>
                            <div class="card__button" onclick="addToCart(${product.id})">
                                <svg height="16" width="16" viewBox="0 0 24 24">
                                    <path
                                        stroke-width="2"
                                        stroke="currentColor"
                                        d="M4 12H20M12 4V20"
                                        fill="currentColor"
                                    ></path>
                                </svg>
                            </div>
                        </div>
                    </div>
                `;
                productsContainer.appendChild(productCard);
            });

            // Refresh AOS to detect new elements
            AOS.refresh();
        }

        // Cart functions
        function addToCart(productId) {
            const product = products.find(p => p.id === productId);
            if (!product) return;

            const existingItem = cart.find(item => item.id === productId);
            if (existingItem) {
                existingItem.quantity += 1;
            } else {
                cart.push({
                    id: product.id,
                    title: product.title,
                    price: product.price,
                    quantity: 1,
                    duration: product.duration
                });
            }

            updateCart();
            showCart();
            showAlert('Produk ditambahkan ke keranjang', 'success');
        }

        function removeFromCart(productId) {
            cart = cart.filter(item => item.id !== productId);
            updateCart();
        }

        function updateQuantity(productId, newQuantity) {
            if (newQuantity < 1) {
                removeFromCart(productId);
                return;
            }

            const item = cart.find(item => item.id === productId);
            if (item) {
                item.quantity = newQuantity;
            }

            updateCart();
        }

        function updateCart() {
            const cartProducts = document.getElementById('cartProducts');
            cartProducts.innerHTML = '';

            if (cart.length === 0) {
                cartProducts.innerHTML = '<p style="text-align: center; color: #999;">Keranjang belanja kosong</p>';
            } else {
                cart.forEach(item => {
                    const productElement = document.createElement('div');
                    productElement.className = 'cart-product';
                    productElement.innerHTML = `
                        <div class="product-info">
                            <div class="product-image"></div>
                            <div class="product-details">
                                <div class="product-name">${item.title}</div>
                                <div class="product-price">${formatPrice(item.price)}</div>
                            </div>
                        </div>
                        <div class="quantity-controls">
                            <button class="quantity-btn" onclick="updateQuantity(${item.id}, ${item.quantity - 1})">-</button>
                            <span class="quantity">${item.quantity}</span>
                            <button class="quantity-btn" onclick="updateQuantity(${item.id}, ${item.quantity + 1})">+</button>
                        </div>
                        <button class="remove-btn" onclick="removeFromCart(${item.id})">Hapus</button>
                    `;
                    cartProducts.appendChild(productElement);
                });
            }

            updateCartTotals();
            updateCartCount();
        }

        function updateCartTotals() {
            const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            let discount = 0;

            if (appliedVoucher) {
                discount = subtotal * appliedVoucher.discount;
            }

            const total = subtotal - discount;

            document.getElementById('cartSubtotal').textContent = formatPrice(subtotal);
            document.getElementById('cartDiscount').textContent = formatPrice(discount);
            document.getElementById('cartTotal').textContent = formatPrice(total);
        }

        function applyCartVoucher() {
            const voucherCode = document.getElementById('cartVoucher').value.trim().toUpperCase();
            
            if (!voucherCode) {
                showAlert('Silakan masukkan kode voucher', 'error');
                return;
            }
            
            if (voucherDiscounts[voucherCode]) {
                appliedVoucher = {
                    code: voucherCode,
                    discount: voucherDiscounts[voucherCode]
                };
                updateCartTotals();
                showAlert(`Voucher ${voucherCode} berhasil diterapkan! Diskon ${voucherDiscounts[voucherCode] * 100}%`, 'success');
            } else {
                showAlert('Kode voucher tidak valid', 'error');
            }
        }

        function showCart() {
            document.getElementById('cartOverlay').classList.add('show');
            document.body.style.overflow = 'hidden';
        }

        function hideCart() {
            document.getElementById('cartOverlay').classList.remove('show');
            document.body.style.overflow = 'auto';
        }

        function proceedToCheckout() {
            if (cart.length === 0) {
                showAlert('Keranjang belanja kosong', 'error');
                return;
            }

            hideCart();
            showOrderForm();
        }

        function updateOrderSummary() {
            const orderSummary = document.getElementById('orderSummary');
            orderSummary.innerHTML = '';
            
            const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            let discount = 0;

            if (appliedVoucher) {
                discount = subtotal * appliedVoucher.discount;
            }

            const total = subtotal - discount;

            const summaryHTML = `
                <h3 style="margin-bottom: 10px; color: #e0e0e0;">Ringkasan Pesanan</h3>
                ${cart.map(item => `
                    <div class="order-summary-item">
                        <span>${item.title} (${item.quantity}x)</span>
                        <span>${formatPrice(item.price * item.quantity)}</span>
                    </div>
                `).join('')}
                <div class="order-summary-item" style="margin-top: 10px; padding-top: 10px; border-top: 1px solid #333;">
                    <span>Subtotal:</span>
                    <span>${formatPrice(subtotal)}</span>
                </div>
                ${appliedVoucher ? `
                    <div class="order-summary-item">
                        <span>Diskon (${appliedVoucher.code}):</span>
                        <span>-${formatPrice(discount)}</span>
                    </div>
                ` : ''}
                <div class="order-summary-item" style="font-weight: bold; margin-top: 10px;">
                    <span>Total:</span>
                    <span>${formatPrice(total)}</span>
                </div>
            `;
            
            orderSummary.innerHTML = summaryHTML;
        }

        // Order Form Functions
        function showOrderForm() {
            updateOrderSummary();
            document.getElementById('orderFormOverlay').classList.add('show');
            
            // Trigger the animation after a small delay
            setTimeout(function() {
                document.getElementById('orderForm').classList.add('show');
            }, 10);
        }
        
        function hideOrderForm() {
            document.getElementById('orderForm').classList.remove('show');
            
            // Wait for animation to complete before hiding overlay
            setTimeout(function() {
                document.getElementById('orderFormOverlay').classList.remove('show');
            }, 300);
            
            // Re-enable scrolling
            document.body.style.overflow = 'auto';
        }
        
        // Invoice Functions
        function showInvoice(name, username, total) {
            // Show loading
            document.getElementById('invoice-loading').style.display = 'flex';
            
            // Hide loading after 2 seconds and show invoice
            setTimeout(function() {
                document.getElementById('invoice-loading').style.display = 'none';
                
                // Generate transaction details
                const transactionId = generateTransactionId();
                const transactionDate = formatDate();
                
                // Get all product details
                const productNames = cart.map(item => `${item.title} (${item.quantity}x)`).join(', ');
                const durations = cart.map(item => item.duration).join(', ');
                const prices = cart.map(item => formatPrice(item.price)).join(', ');
                const quantities = cart.map(item => item.quantity).join(', ');
                const totalPrice = formatPrice(total);
                
                // Update invoice details with all product information
                document.getElementById('invoiceProduct').textContent = productNames;
                document.getElementById('invoiceDuration').textContent = durations;
                document.getElementById('invoicePrice').textContent = prices;
                document.getElementById('invoiceQuantity').textContent = quantities;
                document.getElementById('invoiceTotal').textContent = totalPrice;
                document.getElementById('invoiceTransactionId').textContent = transactionId;
                document.getElementById('invoiceDate').textContent = transactionDate;
                
                // Update QR code with transaction ID
                const qrCodeImg = document.querySelector('.qr-code img');
                qrCodeImg.src = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${transactionId}`;
                
                // Show invoice
                document.getElementById('invoiceOverlay').classList.add('show');
                
                // Send order to Telegram
                sendToTelegram(name, username, total, transactionId);
            }, 2000);
        }
        
        function hideInvoice() {
            document.getElementById('invoiceOverlay').classList.remove('show');
        }
        
        function downloadInvoice() {
            const { jsPDF } = window.jspdf;
            const invoiceElement = document.getElementById('invoiceContainer');
            
            // Set options for html2canvas to ensure QR code is captured
            const options = {
                scale: 2, // Increase scale for better quality
                logging: false,
                useCORS: true, // Allow cross-origin images
                allowTaint: true, // Allow tainted images
                scrollX: 0,
                scrollY: 0,
                windowWidth: invoiceElement.scrollWidth,
                windowHeight: invoiceElement.scrollHeight
            };
            
            // Capture the invoice container
            html2canvas(invoiceElement, options).then(canvas => {
                const imgData = canvas.toDataURL('image/png', 1.0);
                const pdf = new jsPDF({
                    orientation: 'portrait',
                    unit: 'mm',
                    format: 'a4'
                });
                
                // Calculate dimensions to fit the PDF
                const imgWidth = 190; // A4 width in mm minus margins
                const pageHeight = 277; // A4 height in mm minus margins
                const imgHeight = (canvas.height * imgWidth) / canvas.width;
                
                // Add the image to the PDF
                pdf.addImage(imgData, 'PNG', 10, 10, imgWidth, imgHeight);
                
                // Add extra space if content is too long
                let heightLeft = imgHeight;
                let position = 10;
                
                while (heightLeft >= pageHeight) {
                    position = heightLeft - pageHeight;
                    pdf.addPage();
                    pdf.addImage(imgData, 'PNG', 10, -position, imgWidth, imgHeight);
                    heightLeft -= pageHeight;
                }
                
                // Download the PDF
                pdf.save(`invoice_mozazionstore_${generateReferenceNumber()}.pdf`);
            });
        }
        
        // Telegram Functions
        function sendToTelegram(name, username, total, transactionId) {
            // Format the order details
            const orderDate = formatDate();
            const location = document.getElementById('location').value;
            const device = document.getElementById('device').value;
            
            // Remove @ from username if present
            const cleanUsername = username.startsWith('@') ? username.substring(1) : username;
            
            // Create the message with all product details
            const message = `
✦ 𝗙𝗢𝗥𝗠𝗔𝗧 𝗢𝗥𝗗𝗘𝗥 ✦

— ID Transaksi: ${transactionId}
— Nama: ${name}
— Username: @${cleanUsername}
— Tanggal Order: ${orderDate}

✦ 𝗣𝗥𝗢𝗗𝗨𝗞 𝗣𝗘𝗦𝗔𝗡𝗔𝗡 ✦
${cart.map(item => 
    `— ${item.title} (${item.quantity}x) - ${item.duration} - ${formatPrice(item.price)}`
).join('\n')}

✦ 𝗜𝗡𝗙𝗢 𝗟𝗔𝗜𝗡𝗡𝗬𝗔 ✦
— Lokasi: ${location}
— Perangkat: ${device}
— Total Pembayaran: ${formatPrice(total)}
${appliedVoucher ? `— Kode Voucher: ${appliedVoucher.code}\n— Diskon: ${appliedVoucher.discount * 100}%` : ''}
            `;
            
            // Create the inline button
            const inlineButton = {
                text: "Hubungi Customer",
                url: `https://t.me/${cleanUsername}`
            };
            
            // Send to Telegram using the bot API
            const telegramUrl = `https://api.telegram.org/bot${telegramBotToken}/sendMessage`;
            
            fetch(telegramUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    chat_id: telegramChatId,
                    text: message,
                    parse_mode: 'Markdown',
                    reply_markup: {
                        inline_keyboard: [[inlineButton]]
                    }
                })
            })
            .then(response => response.json())
            .then(data => {
                console.log('Message sent to Telegram:', data);
            })
            .catch(error => {
                console.error('Error sending to Telegram:', error);
            });
        }
        
        // Search functionality
        const searchInput = document.getElementById('searchInput');
        const searchButton = document.querySelector('.btn-icon-content');
        
        searchButton.addEventListener('click', function() {
            performSearch();
        });
        
        searchInput.addEventListener('keyup', function(e) {
            if (e.key === 'Enter') {
                performSearch();
            } else {
                // Perform search as user types
                performSearch();
            }
        });

        function performSearch() {
            const searchTerm = searchInput.value.trim().toLowerCase();
            
            if (searchTerm === '') {
                renderProducts(products);
                return;
            }
            
            const filteredProducts = products.filter(product => 
                product.title.toLowerCase().includes(searchTerm) || 
                product.description.toLowerCase().includes(searchTerm)
            );
            
            renderProducts(filteredProducts);
        }
        
        // Alert Functions
        const maxAlerts = 2;
        let alertCount = 0;
        let alertQueue = [];
        
        function showAlert(message, type) {
            const alertContainer = document.getElementById('alertContainer');
            
            // If we already have max alerts, remove the oldest one
            if (alertCount >= maxAlerts) {
                const oldestAlert = alertContainer.firstChild;
                if (oldestAlert) {
                    closeAlert(oldestAlert.id);
                }
            }
            
            const alertId = 'alert-' + Date.now();
            
            const alert = document.createElement('div');
            alert.className = `alert ${type}`;
            alert.id = alertId;
            
            alert.innerHTML = `
                <div class="alert-content">
                    <div class="alert-icon">
                        ${type === 'error' ? 
                            '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line></svg>' : 
                            '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline></svg>'}
                    </div>
                    <div class="alert-text">
                        <div class="alert-title">${type === 'error' ? 'Error' : 'Sukses'}</div>
                        <div class="alert-message">${message}</div>
                    </div>
                </div>
                <button class="alert-close" onclick="closeAlert('${alertId}')">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                </button>
            `;
            
            alertContainer.appendChild(alert);
            alertCount++;
            
            // Show alert with animation
            setTimeout(() => {
                alert.classList.add('show');
            }, 10);
            
            // Auto-remove alert after 5 seconds
            setTimeout(() => {
                closeAlert(alertId);
            }, 5000);
        }
        
        function closeAlert(alertId) {
            const alert = document.getElementById(alertId);
            if (alert) {
                alert.classList.remove('show');
                setTimeout(() => {
                    alert.remove();
                    alertCount--;
                    
                    // Show next alert in queue if any
                    if (alertQueue.length > 0) {
                        const nextAlert = alertQueue.shift();
                        showAlert(nextAlert.message, nextAlert.type);
                    }
                }, 300);
            }
        }
        
        // Handle form submission
        document.getElementById('orderFormElement').addEventListener('submit', function(e) {
            e.preventDefault();
            
            // Validate form
            const name = document.getElementById('name').value;
            const username = document.getElementById('username').value;
            const device = document.getElementById('device').value;
            const location = document.getElementById('location').value;
            
            if (!name || !username || !device || !location) {
                showAlert('Silakan isi semua bidang yang diperlukan', 'error');
                return;
            }
            
            // Calculate total
            const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
            let discount = 0;
            if (appliedVoucher) {
                discount = subtotal * appliedVoucher.discount;
            }
            const total = subtotal - discount;
            
            // Hide the form
            hideOrderForm();
            
            // Show invoice
            showInvoice(name, username, total);
            
            // Reset the form and cart
            this.reset();
            cart = [];
            appliedVoucher = null;
            updateCart();
        });
        
        // Close form when clicking outside
        document.getElementById('orderFormOverlay').addEventListener('click', function(e) {
            if (e.target === this) {
                hideOrderForm();
            }
        });

        document.getElementById('cartOverlay').addEventListener('click', function(e) {
            if (e.target === this) {
                hideCart();
            }
        });
        
        document.getElementById('invoiceOverlay').addEventListener('click', function(e) {
            if (e.target === this) {
                hideInvoice();
            }
        });
        
        // Initialize cart count
        updateCartCount();
    </script>
</body>
</html>